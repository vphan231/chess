Been Debugging - lots of bugs
	1. input is g3 which is across first then down
		we've been doing coordinates x1, y1, x2, y2
		we're getting a piece by board[x1][x2] which is down first then across
			Make all parameters y1, x1, y2, x2
		**Fix every method**
			
	2. When moving pawns forward - have to check for color
		in pawn validMove check was y2=y1+2 || y2=y1+2
			this is only the case for black pawns
			wP move a2 a3,  [6][0] ->[5][0], y2=y1-2 || y2=y1-2
			color specific, cant do +2||-2
		**Fixed** are there any other classes that needs to be fixed?
		
	3. You can eat your own color's piece right now
		add if statement in Board.valid to fix
	
Stuff fixed
	Pawn 
	Knight
	pathV
	pathH
	move
	

Stuff that still needs to be done
	Chess.java
		fill in commented lines
		(new method) validInput	
		
	Board.java
		(new method) validPromote
		(new method) checkBoth //checks eitherKing
		(new method) check //checks if move puts own king in check
		(new method) checkmate //checks if either king is in checkmate
			-maybe have a 
				int[] findKing( boolean color ) { return int[2] arr; //king at x=arr[0], y=arr[1]  }
			method to make the 2 methods above easier
		(method) promote
		Need special valid move checks
			enpassant
			castling

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10/24 Bug fixes - C
	Pawn.java
	Chess.java
		convert
	Board.java
		pathV
		pathH
		move
		some of check

10/23 Updates - C
	Chess.java
		start(){
			draw
			resign
			promote
			validInput
		}
		(new) validInput(){}
	
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10/21 Updates - C
	Board 
		(new method) valid - checks all valid checks - Basics done, still need special cases
		move - did basic move piece and capture, still need special cass
		(new method) promote - method to promote a pawn
		 
	Piece Classes
		(new field) Char type - for less typing purposes
		
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10/20
Valid move
	X King 
	X Knight C
	X Pawn 
	X Queen
	X Rook 
	X Bishop 
	
Board 
	Deleted BP class
	Paths: 
		pathH C 
		pathV C 
		pathD C 
----------------------------------------------------
Chess
	Start
	
Chess Start
	Get input 
		g7 g8 Q
		g7 g8
		Resign
		g7 g8 draw?
		draw
		check if input is resign or draw 
		StringUtils
	validMove
	checkPath
	move
	check if move puts own king in check
		if check - undo
	set origin to null
	use pathchecks
		-for knight, use knight's validMove
	if check
		find all the spaces the king can move
		if king cant move anywhere
			checkmate
			
Castling

Capture
	Enpassant
	
Check if diagonal
	x1-y1 = x2-y2
	x1+y1 = x2+y2
	
Check if L shape
	if( x||y == -2||2 ){
		if other var == -1||1
		then L shape
	}
	
	
Stalemate- extra credit